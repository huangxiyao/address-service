---
# This playbook is for Address Doctor databases deployment
  - name: Download the argument's template files -> /opt/casfw
    template: src=db-deploy-functions.sh dest={{ casfw_home }} mode=0755 owner={{ useraccount }} group={{ usergroup }} force

  - name: Check disk space if it is enough and should not less than 40GB
    action: command bash {{ casfw_home }}/db-deploy-functions.sh checkDiskSpace

  - name: Initial DB latest version folder which will save the latest DB files
    action: command bash {{ casfw_home }}/db-deploy-functions.sh initialDBLatestVersionFolder

  - name: Copy the DB MD files to target server and put in under the db latest version folder
    copy: src={{ item }} dest={{ db_target_folder }}/{{ db_latest_version }} mode=0755 owner={{ useraccount }} group={{ usergroup }} force
    with_fileglob:
      - "{{ db_source_folder }}/*.MD"

  - name: Update DB symbol link and point to the latest db version folder
    action: command bash {{ casfw_home }}/db-deploy-functions.sh updateDBSymLink

########## Restart Data Match Tomcat instance1 #################
  - name: check data match instace 1 is running or not 
    shell: pid_file="{{ casfw_home }}/current/{{ data_match_instance1 }}/var/tomcat-ad.pid"; if [ -f $pid_file ]; then s=$(printf " %s " $(ps -e | grep $(cat $pid_file)) | awk '{ print $1 }'); if [ -n "$s" ]; then echo "data-match1 is running"; fi; fi
    register: datamatch1_running_status

  - debug: msg="data-match1 is not running"
    when: datamatch1_running_status.stdout != 'data-match1 is running'

  - name: reatart data-match intance 1
    include: db-restart-tomcat.yml data_match_instance={{ data_match_instance1 }} port={{ tomcat_ad_port1 }}
    when: datamatch1_running_status.stdout == 'data-match1 is running'

########## Restart Data Match Tomcat instance2 #################
  - name: check data match instace 2 is running or not 
    shell: pid_file="{{ casfw_home }}/current/{{ data_match_instance2 }}/var/tomcat-ad.pid"; if [ -f $pid_file ]; then s=$(printf " %s " $(ps -e | grep $(cat $pid_file)) | awk '{ print $1 }'); if [ -n "$s" ]; then echo "data-match2 is running"; fi; fi
    register: datamatch2_running_status

  - debug: msg="data-match2 is not running"
    when: datamatch2_running_status.stdout != 'data-match2 is running'

  - name: reatart data-match intance 2
    include: db-restart-tomcat.yml data_match_instance={{ data_match_instance2 }} port={{ tomcat_ad_port2 }}
    when: datamatch2_running_status.stdout == 'data-match2 is running'

########## Restart Data Match Tomcat instance3 #################
  - name: check data match instace 3 is running or not 
    shell: pid_file="{{ casfw_home }}/current/{{ data_match_instance3 }}/var/tomcat-ad.pid"; if [ -f $pid_file ]; then s=$(printf " %s " $(ps -e | grep $(cat $pid_file)) | awk '{ print $1 }'); if [ -n "$s" ]; then echo "data-match3 is running"; fi; fi
    register: datamatch3_running_status

  - debug: msg="data-match3 is not running"
    when: datamatch3_running_status.stdout != 'data-match3 is running'

  - name: reatart data-match intance 3
    include: db-restart-tomcat.yml data_match_instance={{ data_match_instance3 }} port={{ tomcat_ad_port3 }}
    when: datamatch3_running_status.stdout == 'data-match3 is running'

  - name: Final Cleanup
    action: command bash {{ casfw_home }}/db-deploy-functions.sh finalCleanup