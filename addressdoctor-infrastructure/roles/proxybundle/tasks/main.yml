---
########## Template files copy and old cdi cleanup #################
  - name: Download the argument's template files -> /opt/casfw
    template: src=proxy-functions.sh dest={{ casfw_home }} mode=0755 owner={{ useraccount }} group={{ usergroup }} force
    tags:
      - copybashscript
      
########## Install JDK if needed #################
  - name: Validate JAVA_HOME configuration
    action: command bash {{ casfw_home }}/proxy-functions.sh javahomeValidation
    register: javahomevalidateresponse
    tags:
      - javahomeValidation
  - name: Download JDK if JAVA_HOME is not found
    action: command wget -Nnv http://repo1.corp.hp.com/nexus/content/groups/public/net/java/openjdk/openjdk-java/{{ jdk_verion }}/openjdk-java-{{ jdk_verion }}-linux-x64.tar.gz -O {{ casfw_home }}/openjdk-java-{{ jdk_verion }}-linux-x64.tar.gz
    when: javahomevalidateresponse.stdout == 'Not installed'
    tags:
      - downloadJDK
  - name: Install JDK 
    action: command bash {{ casfw_home }}/proxy-functions.sh installJDK
    when: javahomevalidateresponse.stdout == 'Not installed'
    tags:
      - installJDK
      
########## Download Proxy Bundle #################
  - name: remove old cdi file
    action: command bash {{ casfw_home }}/proxy-functions.sh cleanCdi
    tags:
      - cleanCdi
  - name: Download proxy-bundle installation CDI
    action: command wget -Nnv http://repo1.corp.hp.com/nexus/content/groups/public/com/hp/it/120482/proxy-bundle-installer/{{ proxy_bundle_version }}/proxy-bundle-installer-{{ proxy_bundle_version }}.cdi  -P /opt/casfw {{ casfw_home }}
    when: not proxybundlesnapshot
    tags:
      - downloadproxybundlecdi
  - name: Download proxy-bundle installation CDI (snapshot)
    action: command wget -Nnv http://repo1.corp.hp.com/nexus/service/local/artifact/maven/redirect?r=snapshots&g=com.hp.it.120482&a=proxy-bundle-installer&v={{ proxy_bundle_version }}&e=cdi -P /opt/casfw {{ casfw_home }}
    when: proxybundlesnapshot
    tags:
      - downloadproxybundlesnapshotcdi

########## init cleanup #################
  - name: Initial Cleanup - remove old symbol link
    action: command bash {{ casfw_home }}/proxy-functions.sh initialCleanup
    tags:
      - initialcleanup
  - name: Remove the existing version of the proxy-bundle
    action: command bash {{ casfw_home }}/proxy-functions.sh cleanupProxyBundle
    tags:
      - cleanupproxybundle

########## Deploy Proxy Bundle #################

  - name: Deploy proxy-bundle CDI
    action: command bash {{ casfw_home }}/proxy-functions.sh installProxyBundleCdi
    tags: 
      - deployproxybundlecdi
  - name: Create proxy-bundle Symbol Link
    action: command bash {{ casfw_home }}/proxy-functions.sh createProxyBundleLink
    tags: 
      - createproxybundlelink

########## Download apache conf file  #################
  - name: Validate apache conf file 
    action: command bash {{ casfw_home }}/proxy-functions.sh validateApacheConf
    register: apacheconfexist
    tags:
      - validateapacheconf
  - name: Download apache conf file
    copy: src=casfw.conf dest={{ casfw_home }}/ mode=0755 owner={{ useraccount }} group={{ usergroup }} force
    when: apacheconfexist.stdout != "Existed"
    tags:
      - downloadapacheconf
  - name: Copy casfw.conf to {{ httpd_confd_path }}
    action: command bash {{ casfw_home }}/proxy-functions.sh copyCasfwConfScript
    su: no
    when: apacheconfexist.stdout != "Existed"
    tags: 
      - copyapacheconf

########## Restart apache instance #################
  - name: Restart Cloud Apache Instance
    action: command bash {{ casfw_home }}/proxy-functions.sh restartCloudApacheInstance
    su: no
    tags:
      - restartcloudapacheinstance

########## Final Cleanup and validation #################

  - name: Final cleanup
    action: command bash {{ casfw_home }}/proxy-functions.sh finalCleanup
    tags:
      - finalcleanup
  - name: Wait for apache port to come up
    wait_for: host={{ inventory_hostname }} port={{ httpd_port }} delay=15 state=started
    su: no
    delegate_to: localhost
  - name: validate cloud apache instance health page
    uri: url={{ item.url }} status_code={{ item.statuscode }}
    retries: 5
    delegate_to: localhost
    su: no
    with_items:
      - { url: 'http://{{ inventory_hostname }}:{{ httpd_port }}/DO_NOT_REMOVE/health_check.html', statuscode: 200}
      - { url: 'http://{{ inventory_hostname }}:{{ httpd_port }}/match/about/health', statuscode: 204}
    tags:
      - validatecloudinstallation