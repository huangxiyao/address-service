package com.hp.it.cas.match.address.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import javax.jws.soap.SOAPBinding.Style;
import javax.jws.soap.SOAPBinding.Use;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.1-hudson-28-
 * Generated source version: 2.2
 *  @see com.hp.it.cas.match.address.legacy.LegacyAddressDoctorAddressAnalyzer
 */
@WebService(targetNamespace = "http://localhost/",  serviceName="CASServiceSoapImplService", portName="CASServiceSoapImplPort", name="CASServiceSoap")
@SOAPBinding(style=Style.DOCUMENT, use=Use.LITERAL, parameterStyle=ParameterStyle.WRAPPED)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CASServiceSoap {


    /**
     * Method currently not implemented
     * 
     * @param buffer
     * @return
     *     returns java.lang.String
     *     
     */
    @WebMethod(operationName = "ProcessAddress", action = "http://localhost/ProcessAddress")
    @WebResult(name = "ProcessAddressResult", targetNamespace = "http://localhost/")
    @RequestWrapper(localName = "ProcessAddress", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.ProcessAddress")
    @ResponseWrapper(localName = "ProcessAddressResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.ProcessAddressResponse")
    public String processAddress(
        @WebParam(name = "_buffer", targetNamespace = "http://localhost/")
        byte[] buffer);

    /**
     * Method currently not implemented
     * 
     */
    @WebMethod(action = "http://localhost/testlog")
    @RequestWrapper(localName = "testlog", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.Testlog")
    @ResponseWrapper(localName = "testlogResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.TestlogResponse")
    public void testlog();

    /**
     * Delegates to legacy address doctor analyzer.
     * 
     * @param distInput
     * @return
     *     returns com.hp.it.cas.data.match.legacy.ArrayOfString
     *     
     * @see com.hp.it.cas.match.address.legacy.LegacyAddressDoctorAddressAnalyzer#analyzeDiscreteAddress
     */
    @WebMethod(action = "http://localhost/standardizeDiscreteAddress")
    @WebResult(name = "standardizeDiscreteAddressResult", targetNamespace = "http://localhost/")
    @RequestWrapper(localName = "standardizeDiscreteAddress", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.StandardizeDiscreteAddress")
    @ResponseWrapper(localName = "standardizeDiscreteAddressResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.StandardizeDiscreteAddressResponse")
    public ArrayOfString standardizeDiscreteAddress(
        @WebParam(name = "DistInput", targetNamespace = "http://localhost/")
        ArrayOfString distInput);

    /**
     * Delegates to legacy address doctor analyzer
     * 
     * @param hybdInput
     * @return
     *     returns com.hp.it.cas.data.match.legacy.ArrayOfString
     *     
     * @see com.hp.it.cas.match.address.legacy.LegacyAddressDoctorAddressAnalyzer#analyzeHybridAddress
     */
    @WebMethod(action = "http://localhost/standardizeHybridAddress")
    @WebResult(name = "standardizeHybridAddressResult", targetNamespace = "http://localhost/")
    @RequestWrapper(localName = "standardizeHybridAddress", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.StandardizeHybridAddress")
    @ResponseWrapper(localName = "standardizeHybridAddressResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.StandardizeHybridAddressResponse")
    public ArrayOfString standardizeHybridAddress(
        @WebParam(name = "HybdInput", targetNamespace = "http://localhost/")
        ArrayOfString hybdInput);

    /**
     * Method not implemented
     */
    @WebMethod(operationName = "Initialize", action = "http://localhost/Initialize")
    @RequestWrapper(localName = "Initialize", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.Initialize")
    @ResponseWrapper(localName = "InitializeResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.InitializeResponse")
    public void initialize();

    /**
     * Method not implemented
     */
    @WebMethod(operationName = "InitializeCAS", action = "http://localhost/InitializeCAS")
    @RequestWrapper(localName = "InitializeCAS", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.InitializeCAS")
    @ResponseWrapper(localName = "InitializeCASResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.InitializeCASResponse")
    public void initializeCAS();

    /**
     * Check to see if there is a healthy connection to the address analyzer.
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "PingServer", action = "http://localhost/PingServer")
    @WebResult(name = "PingServerResult", targetNamespace = "http://localhost/")
    @RequestWrapper(localName = "PingServer", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.PingServer")
    @ResponseWrapper(localName = "PingServerResponse", targetNamespace = "http://localhost/", className = "com.hp.it.cas.data.match.legacy.PingServerResponse")
    public boolean pingServer();

}
